[gd_scene load_steps=6 format=3 uid="uid://y0exfxt0757k"]

[ext_resource type="Texture2D" uid="uid://cfogsjb55qtlj" path="res://gui/panda.png" id="1_6lbql"]

[sub_resource type="GDScript" id="GDScript_iukft"]
script/source = "extends Control

var COLLECTION_ID = \"panda_stats\"
var UnlockedUpgrades: Dictionary = {}

var petting_count: int = 0:
	set(value):
		petting_count = value
		%PettingCountLabel.text = str(value)
		
# Called when the node enters the scene tree for the first time.
func _ready():
	load_data()


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(_delta):
	pass


func _on_panda_button_pressed():
	petting_count += 1


func _on_logout_button_pressed():
	Firebase.Auth.logout()
	get_tree().change_scene_to_file(\"res://Authentication.tscn\")


func _on_save_button_pressed():
	save_data()
	
func save_data():
	print(\"Total \" + str(petting_count) )
	var auth = Firebase.Auth.auth
	
	if auth.localid:
		var collection: FirestoreCollection = Firebase.Firestore.collection(COLLECTION_ID)
		var data: Dictionary = {
			\"Upgrades\": UnlockedUpgrades
		}
		# Fetch the document reference using the localid
		var document = await collection.get_doc(auth.localid)
		
		# If the document exists, update it with the data dictionary
		if document:
			for key in data.keys():
				document.add_or_update_field(key, data[key])
			var task = await collection.update(document)
			if task:
				print(\"Document updated successfully\")
			else:
				print(\"Failed to update document\")
		else:
			# If the document does not exist, create a new one
			document = await collection.add(auth.localid, data)
			if document:
				print(\"Document created successfully\")
			else:
				print(\"Failed to create document\")

func load_data():
	var auth = Firebase.Auth.auth
	
	if auth.localid:
		var collection: FirestoreCollection = Firebase.Firestore.collection(COLLECTION_ID)
		
		# Await the task to get the document
		var document = await collection.get_doc(auth.localid)
		
		if document:
			# Print the document data
			print(document)
		
			var upgrades = document.get_value(\"Upgrades\")
			if upgrades:
				UnlockedUpgrades = upgrades

			print(\"Upgrades: \", upgrades)
			print(\"Upgrades: \", upgrades)
		else:
			print(\"Failed to load document\")
	
"

[sub_resource type="StyleBoxEmpty" id="StyleBoxEmpty_4rcdn"]

[sub_resource type="StyleBoxEmpty" id="StyleBoxEmpty_3ncuk"]

[sub_resource type="StyleBoxEmpty" id="StyleBoxEmpty_mshum"]

[node name="Control" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_iukft")

[node name="VBoxContainer" type="VBoxContainer" parent="."]
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -20.0
offset_top = -20.0
offset_right = 20.0
offset_bottom = 20.0
grow_horizontal = 2
grow_vertical = 2
theme_override_constants/separation = 20

[node name="PettingCountLabel" type="Label" parent="VBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
theme_override_font_sizes/font_size = 50
text = "0"
horizontal_alignment = 1

[node name="PandaButton" type="Button" parent="VBoxContainer"]
layout_mode = 2
theme_override_styles/focus = SubResource("StyleBoxEmpty_4rcdn")
theme_override_styles/hover = SubResource("StyleBoxEmpty_3ncuk")
theme_override_styles/normal = SubResource("StyleBoxEmpty_mshum")
icon = ExtResource("1_6lbql")

[node name="PandaNameLineEdit" type="LineEdit" parent="VBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
theme_override_font_sizes/font_size = 20
placeholder_text = "Name"
alignment = 1

[node name="SaveButton" type="Button" parent="VBoxContainer"]
layout_mode = 2
text = "Save"

[node name="LogoutButton" type="Button" parent="VBoxContainer"]
layout_mode = 2
text = "Logout"

[connection signal="pressed" from="VBoxContainer/PandaButton" to="." method="_on_panda_button_pressed"]
[connection signal="pressed" from="VBoxContainer/SaveButton" to="." method="_on_save_button_pressed"]
[connection signal="pressed" from="VBoxContainer/LogoutButton" to="." method="_on_logout_button_pressed"]
